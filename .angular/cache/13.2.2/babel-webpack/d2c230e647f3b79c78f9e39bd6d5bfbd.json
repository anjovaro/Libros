{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let LibrosService = /*#__PURE__*/(() => {\n  class LibrosService {\n    constructor(http) {\n      this.http = http;\n      this.baseURL = 'assets/libros.json'; // 'localhost/php/consulta.php';\n\n      /* this.getAll() */\n\n      /*   .then((posts) => this.libros = posts) */\n\n      /*   .catch((error) => console.log(error)); */\n\n      console.log('array de libros generado en el servicio');\n    }\n\n    getAll() {\n      // return this.httpClient.get<Libro[]>(this.baseURL).toPromise();\n      return this.http.get(this.baseURL).pipe(map(x => JSON.parse(JSON.stringify(x))));\n    }\n\n    countLibros() {\n      console.log('Servicio: número de libros ' + this.libros.length);\n      return this.libros.length;\n    }\n    /*  getAll(): Libro[] {\r\n      return this.libros;\r\n    } */\n\n\n    getLibro(pLibroId) {\n      return this.libros[pLibroId];\n    }\n\n    create(libroNuevo) {\n      this.libros.push(libroNuevo);\n    }\n\n    getOrdered(criterio) {\n      if (criterio === 'autor') {\n        this.libros.sort((a, b) => {\n          if (a.autor > b.autor) {\n            return 1;\n          }\n\n          if (a.autor < b.autor) {\n            return -1;\n          }\n\n          return 0;\n        });\n      } else if (criterio === 'titulo') {\n        this.libros.sort((a, b) => {\n          if (a.titulo > b.titulo) {\n            return 1;\n          }\n\n          if (a.titulo < b.titulo) {\n            return -1;\n          }\n\n          return 0;\n        });\n      } else if (criterio === 'desordenado') {\n        this.libros.sort((a, b) => {\n          if (a.id > b.id) {\n            return 1;\n          }\n\n          if (a.id < b.id) {\n            return -1;\n          }\n\n          return 0;\n        });\n        /* this.getAll()\r\n        .then(posts => this.libros = posts)\r\n        .catch(error => console.log(error)); */\n      }\n\n      return this.libros;\n    }\n\n  }\n\n  LibrosService.ɵfac = function LibrosService_Factory(t) {\n    return new (t || LibrosService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  LibrosService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LibrosService,\n    factory: LibrosService.ɵfac,\n    providedIn: 'root'\n  });\n  return LibrosService;\n})();","map":null,"metadata":{},"sourceType":"module"}